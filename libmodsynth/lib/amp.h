/* 
 * File:   amp.h

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; version 3 of the License.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

 */

#ifndef AMP_H
#define	AMP_H

#include <math.h>
#include "interpolate-linear.h"

#ifdef	__cplusplus
extern "C" {
#endif

inline float f_db_to_linear(float);
inline float f_linear_to_db(float);    
inline float f_db_to_linear_fast(float);

inline float f_db_to_linear(float a_db)
{
    float f_result = pow ( 10.0, (0.05 * a_db) );
    return f_result;
}

inline float f_linear_to_db(float a_linear)
{
    float f_result = 20.0 * log10 ( a_linear );
    return f_result;
}


/*Arrays*/

#define arr_amp_db2a_count 545

float arr_amp_db2a [arr_amp_db2a_count] = {
0.000010,
0.000010,
0.000011,
0.000011,
0.000011,
0.000012,
0.000012,
0.000012,
0.000013,
0.000013,
0.000013,
0.000014,
0.000014,
0.000015,
0.000015,
0.000015,
0.000016,
0.000016,
0.000017,
0.000017,
0.000018,
0.000018,
0.000019,
0.000019,
0.000020,
0.000021,
0.000021,
0.000022,
0.000022,
0.000023,
0.000024,
0.000024,
0.000025,
0.000026,
0.000027,
0.000027,
0.000028,
0.000029,
0.000030,
0.000031,
0.000032,
0.000033,
0.000033,
0.000034,
0.000035,
0.000037,
0.000038,
0.000039,
0.000040,
0.000041,
0.000042,
0.000043,
0.000045,
0.000046,
0.000047,
0.000049,
0.000050,
0.000052,
0.000053,
0.000055,
0.000056,
0.000058,
0.000060,
0.000061,
0.000063,
0.000065,
0.000067,
0.000069,
0.000071,
0.000073,
0.000075,
0.000077,
0.000079,
0.000082,
0.000084,
0.000087,
0.000089,
0.000092,
0.000094,
0.000097,
0.000100,
0.000103,
0.000106,
0.000109,
0.000112,
0.000115,
0.000119,
0.000122,
0.000126,
0.000130,
0.000133,
0.000137,
0.000141,
0.000145,
0.000150,
0.000154,
0.000158,
0.000163,
0.000168,
0.000173,
0.000178,
0.000183,
0.000188,
0.000194,
0.000200,
0.000205,
0.000211,
0.000218,
0.000224,
0.000230,
0.000237,
0.000244,
0.000251,
0.000259,
0.000266,
0.000274,
0.000282,
0.000290,
0.000299,
0.000307,
0.000316,
0.000325,
0.000335,
0.000345,
0.000355,
0.000365,
0.000376,
0.000387,
0.000398,
0.000410,
0.000422,
0.000434,
0.000447,
0.000460,
0.000473,
0.000487,
0.000501,
0.000516,
0.000531,
0.000546,
0.000562,
0.000579,
0.000596,
0.000613,
0.000631,
0.000649,
0.000668,
0.000688,
0.000708,
0.000729,
0.000750,
0.000772,
0.000794,
0.000818,
0.000841,
0.000866,
0.000891,
0.000917,
0.000944,
0.000972,
0.001000,
0.001029,
0.001059,
0.001090,
0.001122,
0.001155,
0.001189,
0.001223,
0.001259,
0.001296,
0.001334,
0.001372,
0.001413,
0.001454,
0.001496,
0.001540,
0.001585,
0.001631,
0.001679,
0.001728,
0.001778,
0.001830,
0.001884,
0.001939,
0.001995,
0.002054,
0.002113,
0.002175,
0.002239,
0.002304,
0.002371,
0.002441,
0.002512,
0.002585,
0.002661,
0.002738,
0.002818,
0.002901,
0.002985,
0.003073,
0.003162,
0.003255,
0.003350,
0.003447,
0.003548,
0.003652,
0.003758,
0.003868,
0.003981,
0.004097,
0.004217,
0.004340,
0.004467,
0.004597,
0.004732,
0.004870,
0.005012,
0.005158,
0.005309,
0.005464,
0.005623,
0.005788,
0.005957,
0.006131,
0.006310,
0.006494,
0.006683,
0.006879,
0.007079,
0.007286,
0.007499,
0.007718,
0.007943,
0.008175,
0.008414,
0.008660,
0.008913,
0.009173,
0.009441,
0.009716,
0.010000,
0.010292,
0.010593,
0.010902,
0.011220,
0.011548,
0.011885,
0.012232,
0.012589,
0.012957,
0.013335,
0.013725,
0.014125,
0.014538,
0.014962,
0.015399,
0.015849,
0.016312,
0.016788,
0.017278,
0.017783,
0.018302,
0.018836,
0.019387,
0.019953,
0.020535,
0.021135,
0.021752,
0.022387,
0.023041,
0.023714,
0.024406,
0.025119,
0.025852,
0.026607,
0.027384,
0.028184,
0.029007,
0.029854,
0.030726,
0.031623,
0.032546,
0.033497,
0.034475,
0.035481,
0.036517,
0.037584,
0.038681,
0.039811,
0.040973,
0.042170,
0.043401,
0.044668,
0.045973,
0.047315,
0.048697,
0.050119,
0.051582,
0.053088,
0.054639,
0.056234,
0.057876,
0.059566,
0.061306,
0.063096,
0.064938,
0.066834,
0.068786,
0.070795,
0.072862,
0.074989,
0.077179,
0.079433,
0.081752,
0.084140,
0.086596,
0.089125,
0.091728,
0.094406,
0.097163,
0.100000,
0.102920,
0.105925,
0.109018,
0.112202,
0.115478,
0.118850,
0.122321,
0.125893,
0.129569,
0.133352,
0.137246,
0.141254,
0.145378,
0.149624,
0.153993,
0.158489,
0.163117,
0.167880,
0.172783,
0.177828,
0.183021,
0.188365,
0.193865,
0.199526,
0.205353,
0.211349,
0.217520,
0.223872,
0.230409,
0.237137,
0.244062,
0.251189,
0.258523,
0.266073,
0.273842,
0.281838,
0.290068,
0.298538,
0.307256,
0.316228,
0.325462,
0.334965,
0.344747,
0.354813,
0.365174,
0.375837,
0.386812,
0.398107,
0.409732,
0.421697,
0.434010,
0.446684,
0.459727,
0.473151,
0.486968,
0.501187,
0.515822,
0.530884,
0.546387,
0.562341,
0.578762,
0.595662,
0.613056,
0.630957,
0.649382,
0.668344,
0.687860,
0.707946,
0.728618,
0.749894,
0.771792,
0.794328,
0.817523,
0.841395,
0.865964,
0.891251,
0.917276,
0.944061,
0.971628,
1.000000,
1.029201,
1.059254,
1.090184,
1.122018,
1.154782,
1.188502,
1.223207,
1.258925,
1.295687,
1.333521,
1.372461,
1.412538,
1.453784,
1.496236,
1.539927,
1.584893,
1.631173,
1.678804,
1.727826,
1.778279,
1.830206,
1.883649,
1.938653,
1.995262,
2.053525,
2.113489,
2.175204,
2.238721,
2.304093,
2.371374,
2.440619,
2.511886,
2.585235,
2.660725,
2.738420,
2.818383,
2.900681,
2.985383,
3.072557,
3.162278,
3.254618,
3.349654,
3.447466,
3.548134,
3.651741,
3.758374,
3.868120,
3.981072,
4.097321,
4.216965,
4.340103,
4.466836,
4.597270,
4.731513,
4.869675,
5.011872,
5.158222,
5.308845,
5.463865,
5.623413,
5.787620,
5.956622,
6.130558,
6.309574,
6.493816,
6.683439,
6.878599,
7.079458,
7.286182,
7.498942,
7.717915,
7.943282,
8.175230,
8.413952,
8.659643,
8.912509,
9.172759,
9.440609,
9.716280,
10.000000,
10.292006,
10.592537,
10.901845,
11.220184,
11.547820,
11.885022,
12.232071,
12.589254,
12.956867,
13.335215,
13.724609,
14.125376,
14.537844,
14.962357,
15.399265,
15.848932,
16.311729,
16.788040,
17.278259,
17.782795,
18.302061,
18.836491,
19.386526,
19.952623,
20.535250,
21.134890,
21.752041,
22.387211,
23.040930,
23.713737,
24.406191,
25.118864,
25.852348,
26.607250,
27.384197,
28.183830,
29.006811,
29.853827,
30.725574,
31.622776,
32.546177,
33.496544,
34.474659,
35.481339,
36.517414,
37.583740,
38.681206,
39.810719,
40.973209,
42.169651,
43.401028,
44.668358,
45.972698,
47.315125,
48.696751,
50.118725,
51.582218,
53.088444,
54.638657,
56.234131,
57.876198,
59.566216,
61.305580,
63.095734};


inline float f_db_to_linear_fast(float a_db)
{
    a_db = ((a_db + 100.0f) * 4) - 1;
            
    if(a_db >= arr_amp_db2a_count)
        a_db = arr_amp_db2a_count - 1;
    
    if(a_db < 0)
        a_db = 0;
    
    return f_linear_interpolate_arr(arr_amp_db2a, a_db);
}

#ifdef	__cplusplus
}
#endif

#endif	/* AMP_H */

