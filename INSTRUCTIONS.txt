How to install:

	cd lms-filter  #or whatever plugin you want to install
	perl build.pl --full-build
	perl build.pl --install


How to generate a Makefile to be able to open the project in an IDE like Netbeans:

	cd lms-filter  #or whatever plugin you want to build
	perl build.pl --full-build


How to run a plugin standalone with console debugging:
	
	#You must first un-comment the defines for the debug mode you want to use
	#most are in synth.h, and look like this:
	#
	#	#define LMS_DEBUG_MAIN_LOOP
	#
	#You should comment them back out when releasing a plugin, as they waste a lot of CPU

	cd lms-filter  #or whatever plugin you want to build
	perl build.pl --debug

How to debug using GDB:

	cd lms-filter  #or whatever plugin you want to build
	perl build.pl --debug-gdb
	#This functionality is still a W.I.P.

How to create .deb packages:

	cd lms-filter  #or whatever plugin you want to package
	perl build.pl --deb
	#answer questions

How to create .rpm packages:

	cd lms-filter  #or whatever plugin you want to package
	perl build.pl --rpm
	#answer questions

How to fork a plugin automatically:

	Run this command in the directory of the plugin you want to fork:

	perl build.pl --fork

	, answer a few questions, and the script will copy the folder and update all meta-data and compiling information.

	If you're committing it to a git repository, you may want to run this command afterwards:

	perl build.pl --git-add

How to fork a plugin manually:

	Make a copy of the plugin folder you want to fork, place it in libmodsynth-git and rename it

	in <plugin>/src/meta.h , update the plugin information

	in <plugin>/src/Makefile.am , CTRL+F replace lms_filter with lms_comb (or whatever other names)

	update <plugin>/build.pl with the new plugin info

	run perl build.pl -f

	Delete any IDE specific folders like nbproject in your plugin folder

	Now you can load the project in your IDE

	The appropriate files can be added to git with:
	git add src/dssi.h src/libmodsynth.h src/Makefile.am src/synth.c src/synth.h src/synth_qt_gui.cpp src/meta.h src/synth_qt_gui.h build.pl Makefile.am configure.ac

How to debug by having the plugin write text to the console:

	In synth.h, there are multiple #defines that have been commented out, like:

	#define LMS_DEBUG_MAIN_LOOP

	If you uncomment them, you can print debug output defined in synth.c, etc... to the console.

How to debug in an IDE, or using gdb, etc...:

	You will need an ELF executable, use the one here:

	../jack-dssi-host/jack-dssi-host

	This will be built automatically the first time you run "perl build.pl --full-build" in any plugin folder.
