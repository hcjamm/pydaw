BUG:  Recalling loop points doesn't work properly.  The controls are recalled properly on the UI, but they are not set in the engine....

use cautious-launcher to launch with .desktop icon(albeit, something is still wrong, because that doesn't work)

Protractor:  

LMS Session Manager:  Prompt to save when quitting...

Update LMS Delay to use the new limiter for ducking....  Also widgetize the UI, which still uses the very first version LMS UIs....

Make a wavetable mode for Euphoria, then put wavetables somewhere in /usr/share/euphoria/wavetables, and a folder like /usr/share/euphoria/presets that contains .u4ia files, then a /usr/share/euphoria/samples folder.  A presets combobox loads a list of all .u4ia files from this folder at startup(bank and program, only allow 1 level of recursion, or maybe 2? library->bank->program???  Perhaps consolidate library->bank to a single combobox to avoid having to update QCombobox entries?  Or just do it dynamically?)

Check that lms-jack-dssi-host compiles with debug symbols

Use this to allow selecting a different virtual desktop for each plugin(a command-line switch, to be used with a library function?):

	For me I have two desktops:
	QDesktopWidget::screenGeometry(0) returns 0,0 / 1279/1023
	QDesktopWidget::screenGeometry(1) returns -1024,120 / -1,887

	If I now want to move my widget to screen 1, I just have to call QWidget::move() with a point inside -1024,120 / -1,887

	Take a look at qt4-src/examples/tutorial/t1 - a 'hello.move(-800,500);' after hello.show() does the trick.

Remove mstack-align, etc... from the Euphoria GUI CXXFLAGS...  See if that improves startup time....

lms-jack-dssi-host:  The part below /* Create ALSA MIDI port */ is probably where I could interject a Jack port instead?  Or bridge one in?  The relevant code for doing that is here:  http://trac.jackaudio.org/wiki/WalkThrough/Dev/SimpleMidiClient

Qtractor:  Command line args for opening with a project
LMS Suite Plugins:   Command line args that pass additional args to the UI(configure messages?)  The UI needs to keep a hashtable of configure messages for saving...

LMS Session:  A radiobutton that can connect a MIDI keyboard selected from a dropdown to an instrument

MIDI CC Tooltips for Euphoria and Ray-V, reading from the CC Map file, possibly as a function of LMS_Control, or inheriting classes?

Try -mpreferred-stack-boundary=4 CFLAG

Use memset or bzero for zeroing out arrays...

Using MIDI CC automation on Euphoria monoFX doesn't actually move the knobs, but does change the values???

Use -D_REENTRANT for Euphoria?

Add a --debug-valgrind option

Protractor:  Closing the track_properties window resets the parameters you've changed.

m_mono_fx_values and m_sample_selected_monofx_groups arrays are all screwed up when run in debug mode...

Profile startup to figure out what's taking so long...  UPDATE:  It's not the initializer that takes so long...

CTRL+F for TODOs... must be alot of them

Menu actions for making FX groups sequential or all 0.  Also one for setting all interpolation modes to a value...

void SamplerGUI::selectionChanged();  Should those setCurrentIndex functions be called twice???

MonoFX groups:

	5.  Relocate ADSR to be per-sample
	6.  Make noise_adder an effect so it can be per-sample

Is this part creating funkyness???

	count = sample_count - pos;
	if (event_pos < event_count &&
	    events[event_pos].time.tick < sample_count) {
	    count = events[event_pos].time.tick - pos;
	}

Are these lines wrong???

    else if((port >= LMS_SAMPLE_START_PORT_RANGE_MIN) && (port < LMS_SAMPLE_START_PORT_RANGE_MAX))
    {   
        if (!m_suppressHostUpdate) 
        {
                lo_send(m_host, m_controlPath, "if", port, float(a_value));
        }        
    }
    else if((port >= LMS_SAMPLE_END_PORT_RANGE_MIN) && (port < LMS_SAMPLE_END_PORT_RANGE_MAX))
    {
        if (!m_suppressHostUpdate) 
        {
                lo_send(m_host, m_controlPath, "if", port, float(a_value));
        }
    }

Strip debug symbols into separate file?

MEMORY USAGE PROBLEMS:  Removing the comb filters shaves off 250MB of memory... TODO:  Figure out a good workaround for this, maybe round-robin assignment at note on...  Or move that to the master/master FX section with reverb, compressor and delay

Intercept the sequencer stop event and reset pitchbend to zero when it happens

Move the rest of the add_sample_lms_euphoria stack variables to the heap

Make item double-click load the sample

VERY IMPORTANT:  Check everywhere that the DSSI folder exists before writing files to it, this could really ruin the user's first impression.

An option for musically tuned loops with a note_selector widget, using sample start, but replacing sample end...  EDIT:  May have to store sample length to do that?  Could probably be implemented as an additional loop mode, with only one extra port group for the note_selector

More checks, balances and resiliancy in the file browser

Rework command line args for lms-jack-dssi-host, and make .../lib/lms_suite the install folder

Euphoria:  Integrate LMS Delay and Freeverb(remix), or else send effects

Rearrange sample_load into a single loop that only loads channel 2 if it exists in the source

Try to figure out WTF is wrong with jack-dssi-host debugging in Netbeans.  Maybe just remove that stupid stipulation of where a .so may be?

Revisit osc_wavetable for Ray-V using the SINC interpolator

float* to sndfile module, integrate into debugger for opening in Audacity

ADSR:  Add attack delay stage, possibly as a separate t_wait type...  Make the envelope DADHSR (or make the sustain stage optional...).  Also, use the dB curve for amp measurements, then add a sneaky 2nd fixed time  R stage that goes from -20db to -100db...

ADSR:  Create a separate on/off int variable, instead of relying on a stage number to tell if the envelope is off....

Euphoria mod matrix:  Allow LFO/Envelopes to modify the amount of a modifier->effect

Euphoria mod matrix:  Velocity and Pitch as modulators, perhaps taking a centerpoint approach and either clipping or decrementing below an arbitary note value like 24/36/etc...

LMS Modulex:  Ports are out-of-order in Qtractor?

Euphoria:  MIDI Offset is jacked up, still doesn't align where it should. TODO:  make it right for ProTractor without adjustment...

Morphing filter types, or atleast a LP->HP morph....

Euphoria:  Release a note's envelope if it has no more active samples playing.  Saves CPU and prevents white/pink noise from playing forever

Nick freeverb from Muse2

LFO:  Tempo-sync module from LMS Delay

Euphoria:  Add pitch as a source/destination, LFO speed as a destination, and velocity as a source to mod matrix, or maybe in a different mod matrix?

Modulex/Euphoria:  Add modulation macro knobs

Modulex/Euphoria:  add smoothers to modulation macro knobs

lms-jack-dssi-host:  If the user invokes it without args, generate a list of available plugins

A CC-map editor window plugin for editing CC maps of plugins, and a configure() method for reloading CC data.

Euphoria:  Qt events for mod matrix are allowed to fire themselves a 2nd time until Qt prevents an infinite loop?

CHECK THE BEHAVIOUR OF CC_MAP WHEN UNEXPECTED PORTS ARE PRESENT

Modulex:
	Add presets to Modulex
	Add dry/wet for the filter's 3rd knob
	A noise adder for Modulex?

Called Modulex' *changed function when combobox index changes

IMPORTANT:  Are *changed SLOTs being called twice for the new velocity controls?

SamplerGUI::setSelection() :  Can this be deprecated, or should it be implemented?


