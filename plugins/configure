#!/usr/bin/perl

#A faux configure script for checking dependencies.
#This was created to soothe those who don't feel right
#about compiling without first running ./configure

print "Configuring...\n";

%libs = ( "liblo" , "liblo (OSC library)",
           "alsa" ,    "libasound",
           "sndfile",    "libsndfile",
	   "samplerate", "libsamplerate");

%cflags = ("QtCore", "libqt4-core",
	   "QtGui", "libqt4-gui",
	   "sm", "libsm",
	   "x11", "libx11",
	   );
           
# LOOP THROUGH IT
while (($key, $value) = each(%libs)){
     check_lib( $key, $value);
}

while (($key, $value) = each(%cflags)){
     check_cflag( $key, $value);
}

#Notify of success, the script made it through the iteration loops without exiting
print "Successfully configured.  Now run 'make' and 'make install' as root\n\n";

sub check_lib
{
	check_pkg("libs", $_[0], $_[1] );
}

sub check_cflag
{
	check_pkg("cflags", $_[0], $_[1] );
}

#args:
#0: cflags or libs
#1: pkg-config name
#2: package name as it would likely appear in a package manager
sub check_pkg
{
	if(system("pkg-config --$_[0]  $_[1] ") != 0)
	{
		print "Cannot locate package $_[2] , please make sure you've installed the development version of the $_[1] library.\n\n";
		exit(1);
	}
	else
	{
		print "Found $_[2]($_[1] library)\n";
	}
}



