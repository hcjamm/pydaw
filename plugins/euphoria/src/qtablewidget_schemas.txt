This file is only for developer reference to the schema of QTableWidgets

m_sample_select:

0  "Select"
1  "File"
2  "Note"
3  "Octave"
4  "Low Note"
5  "High Note"
6  "Low Vel"
7  "High Vel"
8  "Volume"
9  "FX Group"
10 "Mode"
11 "Length Seconds"
12 "Length Samples"
13 "Start"
14 "End"
15 "Loop Start"
16 "Loop End"


FX Group effect choices:

0  "Off"
1  "LP2"
2  "LP4"
3  "HP2"
4  "HP4"
5  "BP2"
6  "BP4"
7  "EQ"
8  "Distortion"


Notes on the implementation of Trivial Sampler:

Samples get loaded here:  char *samplerLoad(Sampler *plugin_data, const char *path)

The samples are added to the parent struct here:

    pthread_mutex_lock(&plugin_data->mutex);

    tmpOld[0] = plugin_data->sampleData[0];
    tmpOld[1] = plugin_data->sampleData[1];
    plugin_data->sampleData[0] = tmpSamples[0];
    plugin_data->sampleData[1] = tmpSamples[1];
    plugin_data->sampleCount = samples;

    for (i = 0; i < Sampler_NOTES; ++i) {
	plugin_data->ons[i] = -1;
	plugin_data->offs[i] = -1;
	plugin_data->velocities[i] = 0;
    }

    pthread_mutex_unlock(&plugin_data->mutex);

TODO:  Refactor *sampleData to *sampleData0[LMS_MAX_SAMPLE_COUNT] and *sampleData1[LMS_MAX_SAMPLE_COUNT]


Samples are being interpolated here:

static void addSample(Sampler *plugin_data, int n,
		      unsigned long pos, unsigned long count)

this line may just be performing linear interpolation?

	    float sample = plugin_data->sampleData[ch][rsi] +
		((plugin_data->sampleData[ch][rsi + 1] -
		  plugin_data->sampleData[ch][rsi]) *
		 (rs - (float)rsi));

The only use of #include <samplerate.h> is in samplerLoad