#!/usr/bin/perl

$sample_count = 32;
$class_name = "SamplerGUI";

$slots = "";
$slot_defs = "";
$connections = "";

for($i = 0; $i < $sample_count; $i++)
{
my $slot = "sample_pitch$i" . "Changed(int)";
my $slot_def = "sample_pitch$i" . "Changed(int a_value)";
my $function = "sample_pitchChanged($i);";
$slots .= "\t$slot;\n";
$slot_defs .= "$class_name" . "::" . "$slot_def" . "{$function}\n";
$connections .= "\t\t\tconnect(((LMS_note_selector*)(m_sample_table->lms_mm_columns[SMP_TB_NOTE_INDEX]->controls[$i]))->lms_note, SIGNAL(currentIndexChanged(int)), this, SLOT($slot));\n";
$connections .= "\t\t\tconnect(((LMS_note_selector*)(m_sample_table->lms_mm_columns[SMP_TB_NOTE_INDEX]->controls[$i]))->lms_octave, SIGNAL(valueChanged(int)), this, SLOT($slot));\n";
}

for($i = 0; $i < $sample_count; $i++)
{
my $slot = "sample_lnote$i" . "Changed(int)";
my $slot_def = "sample_lnote$i" . "Changed(int a_value)";
my $function = "sample_lnoteChanged($i);";
$slots .= "\t$slot;\n";
$slot_defs .= "$class_name" . "::" . "$slot_def" . "{$function}\n";
$connections .= "\t\t\tconnect(((LMS_note_selector*)(m_sample_table->lms_mm_columns[SMP_TB_LOW_NOTE_INDEX]->controls[$i]))->lms_note, SIGNAL(currentIndexChanged(int)), this, SLOT($slot));\n";
$connections .= "\t\t\tconnect(((LMS_note_selector*)(m_sample_table->lms_mm_columns[SMP_TB_LOW_NOTE_INDEX]->controls[$i]))->lms_octave, SIGNAL(valueChanged(int)), this, SLOT($slot));\n";
}

for($i = 0; $i < $sample_count; $i++)
{
my $slot = "sample_hnote$i" . "Changed(int)";
my $slot_def = "sample_hnote$i" . "Changed(int a_value)";
my $function = "sample_hnoteChanged($i);";
$slots .= "\t$slot;\n";
$slot_defs .= "$class_name" . "::" . "$slot_def" . "{$function}\n";
$connections .= "\t\t\tconnect(((LMS_note_selector*)(m_sample_table->lms_mm_columns[SMP_TB_HIGH_NOTE_INDEX]->controls[$i]))->lms_note, SIGNAL(currentIndexChanged(int)), this, SLOT($slot));\n";
$connections .= "\t\t\tconnect(((LMS_note_selector*)(m_sample_table->lms_mm_columns[SMP_TB_HIGH_NOTE_INDEX]->controls[$i]))->lms_octave, SIGNAL(valueChanged(int)), this, SLOT($slot));\n";
}

for($i = 0; $i < $sample_count; $i++)
{
my $slot = "sample_vol$i" . "Changed(int)";
my $slot_def = "sample_vol$i" . "Changed(int a_value)";
my $function = "sample_volChanged($i);";
$slots .= "\t$slot;\n";
$slot_defs .= "$class_name" . "::" . "$slot_def" . "{$function}\n";
$connections .= "\t\t\tconnect(((LMS_note_selector*)(m_sample_table->lms_mm_columns[SMP_TB_VOLUME_INDEX]->controls[$i]))->lms_note, SIGNAL(currentIndexChanged(int)), this, SLOT($slot));\n";
$connections .= "\t\t\tconnect(((LMS_note_selector*)(m_sample_table->lms_mm_columns[SMP_TB_VOLUME_INDEX]->controls[$i]))->lms_octave, SIGNAL(valueChanged(int)), this, SLOT($slot));\n";
}


print "
/*synth_qt_gui.h Autogenerated slots*/

$slots
/*End synth_qt_gui.h Autogenerated slots*/

/*synth_qt_gui.cpp Autogenerated connections*/

$connections
/*End synth_qt_gui.cpp Autogenerated connections*/

/*synth_qt_gui.cpp Autogenerated slots*/

$slot_defs
/*End synth_qt_gui.cpp Autogenerated slots*/
";

